package com.praca.manager.service;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import org.springframework.stereotype.Service;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Date;

@Service
public class PdfService {

    private CustomerService customerService;
    private DetailsService detailsService;

    public PdfService(CustomerService customerService, DetailsService detailsService){
        this.customerService = customerService;
        this.detailsService = detailsService;
    }

    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16, Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

    String seba = "seba";

    public void newDocument(int id) throws DocumentException, FileNotFoundException {
        Document document = new Document();

        PdfWriter.getInstance(document, new FileOutputStream("C:/Users/Lenovo/Desktop/new.pdf"));

        document.open();

        Paragraph preface = new Paragraph();
        addEmptyLine(preface, 1);

        preface.add(new Paragraph("Service Card", catFont));

        addEmptyLine(preface, 1);

        preface.add(new Paragraph("Report generated by: "
        + System.getProperty("user.name") + ", " + new Date(), smallBold));

        addEmptyLine(preface, 3);
        preface.add(new Paragraph("very important", smallBold));
        addEmptyLine(preface, 8);

        preface.add(new Paragraph("hehe nauczki", redFont));

        document.add(preface);

        Anchor anchor = new Anchor("First Chapter", catFont);
        anchor.setName("first chapter");

        Chapter catPart = new Chapter(new Paragraph(anchor), 1);

        Paragraph subPara = new Paragraph("Customer Data", subFont);

        Section subCatPart = catPart.addSection(subPara);
        addEmptyLine(subPara, 2);

        createCustomerTable(subCatPart, id);

        document.add(subCatPart);



        anchor = new Anchor("Second Chapter", catFont);
        anchor.setName("second chapter");

        Chapter catPart2 = new Chapter(new Paragraph(anchor), 2);

        Paragraph subPara2 = new Paragraph("Customer Details", subFont);

        Section subCatPart2 = catPart2.addSection(subPara2);
        addEmptyLine(subPara2, 2);

        document.add(subCatPart2);


        document.close();
    }

    public void createCustomerTable(Section subCatPart, int id)
        throws BadElementException{

        PdfPTable table = new PdfPTable(4);

        PdfPCell c1 = new PdfPCell(new Phrase("Customer ID"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Owner"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Address"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("phone Number"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        PdfPCell data = new PdfPCell(new Phrase(String.valueOf(String.valueOf(customerService.getCustomer(id).getCustomerId()))));
        data.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(data);

        data = new PdfPCell(new Phrase(customerService.getCustomer(id).getOwner()));
        data.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(data);

        data = new PdfPCell(new Phrase(customerService.getCustomer(id).getAddress()));
        data.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(data);

        data = new PdfPCell(new Phrase(customerService.getCustomer(id).getPhoneNumber()));
        data.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(data);

        //other way:
        //table.addCell();

        subCatPart.add(table);
    }

    public void addEmptyLine(Paragraph paragraph, int number){
        for (int i=0; i<number; i++){
            paragraph.add(new Paragraph(" "));
        }
    }
}